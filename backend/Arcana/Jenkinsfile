pipeline {
    agent any
         environment {
            imagename = "d107final/docker-test"
            registryCredential = 'jumzip@d107'
            dockerImage = ''
        }

    //tools {}
    stages {
        stage('start') {
            steps { echo '[process START] (o゜▽゜)o---☆ *:･.:･ﾟ*' }
        }

        stage('git clone') {
            steps {
                checkout scmGit(
                    branches: [[name: 'buildtest']],
                    extensions: [],
                    userRemoteConfigs: [[
                        credentialsId: 'testcred',
                        url: 'https://lab.ssafy.com/s08-final/S08P31D107.git'
                    ]]
                )
                echo 'clone Git complete!!!'
            }

            post { failure { echo '[error] git clone FAIL (╯°□°）╯︵ ┻━┻ ' } }
        }

        stage('build Gradle') {

            steps {
                dir('backend/Arcana') {

                    //현재 dir 체크
                    script {
                        def pwd = sh(script: 'pwd', returnStdout: true).trim()
                        echo "Current directory : ${pwd}"
                    }

                    echo "build Gradle..."

                    sh "chmod +x gradlew"
                    sh "./gradlew clean build"
                }

                echo "build Gradle complete!!!"
            }

            post { failure { echo '[error] build Gradle FAIL (╯°□°）╯︵ ┻━┻ ' } }
        }

        stage('build Docker') {

            steps {
                dir('backend/Arcana') {

                    echo 'build Docker...'

                    //현재 dir 체크
                    script {
                        def pwd = sh(script: 'pwd', returnStdout: true).trim()
                        echo "Current directory : ${pwd}"

                        dockerImage = docker.build imagename
                    }

                    //[dockerHub Username]/[dockerHub Reponame]:[version]
                    /* sh "docker build -t d107final/docker-test."
                    sh "docker push d107final/docker-test" */
                }
            }
        }
        /* stage('') {
            sh "docker ps -q --filter 'name=docker-test' | grep -q .
                                && docker stop docker-test
                                && docker rm docker-test | true"
        } */
    }
}